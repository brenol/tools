" *****************************************************************************
"  CONFIG
" *****************************************************************************
" vim: ft=vim

" -----------------------------------------------------------------------------
" Basic Setup
" -----------------------------------------------------------------------------
set nowrap
set autoread
set hidden                          " Enable hidden buffers
set backspace=indent,eol,start      " Fix backspace indent
set wildmenu                  	    " Menu completion in command mode on <Tab>
set wildmode=full                   " <Tab> cycles between all matching choices
set shell=/bin/bash                 " Bash is the default shell
set clipboard=unnamedplus           " make vim use the system clipboard by default
let loaded_matchparen = 1           " Disable Match Paren

" -----------------------------------------------------------------------------
" File wildcard expanding
" -----------------------------------------------------------------------------
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite
set wildignore+=*.o,*.obj,.git,*.rbc,*.pyc,__pycache__

" -----------------------------------------------------------------------------
" File Encoding and File Format
" -----------------------------------------------------------------------------
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
set bomb
set ttyfast
set binary
set fileformats=unix,dos,mac

" -----------------------------------------------------------------------------
" Tabs. May be overriten by autocmd rules
" -----------------------------------------------------------------------------
set tabstop=4
set softtabstop=0
set shiftwidth=4
set expandtab

" -----------------------------------------------------------------------------
" Searching
" -----------------------------------------------------------------------------
set hlsearch
set incsearch
set ignorecase
set smartcase

" -----------------------------------------------------------------------------
" Directories for swp files
" -----------------------------------------------------------------------------
set nobackup
set noswapfile

" -----------------------------------------------------------------------------
" Messages, Info, Status
" -----------------------------------------------------------------------------
set vb t_vb=        " Disable all bells.  I hate ringing/flashing.
set confirm         " Y-N-C prompt if closing with unsaved changes.
set showcmd         " Show incomplete normal mode commands as I type.
set pumheight=10    " Keep a small completion window
set laststatus=2
set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\ %{fugitive#statusline()}


" -----------------------------------------------------------------------------
" Visual Settigns
" -----------------------------------------------------------------------------
syntax on
set ruler
set number

let no_buffers_menu=1
highlight BadWhitespace ctermbg=red guibg=red
silent! colorscheme desert256v2

set mouse=a

set t_Co=256
set cursorline
set guioptions=egmrti
set gfn=Monospace\ 8

if has("gui_running")
	if has("gui_mac") || has("gui_macvim")
		set guifont=Menlo:h12
		set transparency=7
	endif
else
	let g:CSApprox_loaded = 1

	if $COLORTERM == 'gnome-terminal'
		set term=gnome-256color
	else
		if $TERM == 'xterm'
			set term=xterm-256color
		endif
	endif
endif

if &term =~ '256color'
	set t_ut=
endif

" Disable the blinking cursor.
set gcr=a:blinkon0
set scrolloff=3

" Use modeline overrides
set modeline
set modelines=10

" Window Title
set title
set titleold="Terminal"
set titlestring=%F

" -----------------------------------------------------------------------------
" General Abbreviations
" -----------------------------------------------------------------------------
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q

" -----------------------------------------------------------------------------
" General Functions
" -----------------------------------------------------------------------------
if !exists('*s:setupWrapping')
	function s:setupWrapping()
		set wrap
		set wm=2
		set textwidth=99
	endfunction
endif

if !exists('*TrimWhiteSpace')
	function TrimWhiteSpace()
		let @*=line(".")
		%s/\s*$//e
		''
	endfunction
endif

" -----------------------------------------------------------------------------
" General Autocmd Rules
" -----------------------------------------------------------------------------

"" The PC is fast enough, do syntax highlight syncing from start
autocmd BufEnter * :syntax sync fromstart

"" Remember cursor position
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif

"" txt
autocmd BufRead,BufNewFile *.txt call s:setupWrapping()

"" make/cmake
autocmd FileType make setlocal noexpandtab
autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake

if has("gui_running")
	autocmd BufWritePre * :call TrimWhiteSpace()
endif

" -----------------------------------------------------------------------------
" Plugin: NERDTree
" -----------------------------------------------------------------------------
let g:NERDTreeChDirMode=2
let g:NERDTreeIgnore=['\.rbc$', '\~$', '\.pyc$', '\.db$', '\.sqlite$', '__pycache__']
let g:NERDTreeSortOrder=['^__\.py$', '\/$', '*', '\.swp$', '\.bak$', '\~$']
let g:NERDTreeShowBookmarks=1
let g:nerdtree_tabs_focus_on_files=1
let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'
let g:NERDTreeWinSize = 20

" -----------------------------------------------------------------------------
" Plugin: grep.vim
" -----------------------------------------------------------------------------
let Grep_Default_Options = '-IR'

" -----------------------------------------------------------------------------
" Plugin: vimshell
" -----------------------------------------------------------------------------
let g:vimshell_user_prompt = 'fnamemodify(getcwd(), ":~")'
let g:vimshell_prompt =  '$ '

" -----------------------------------------------------------------------------
" Plugin: ctrlp.vim
" -----------------------------------------------------------------------------
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn|tox)$'
let g:ctrlp_user_command = "find %s -type f | grep -Ev '"+ g:ctrlp_custom_ignore +"'"
let g:ctrlp_use_caching = 0
let g:ctrlp_working_path_mode = '0'

" -----------------------------------------------------------------------------
" Plugin: syntastic
" -----------------------------------------------------------------------------
let g:syntastic_always_populate_loc_list=0
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'
let g:syntastic_style_error_symbol = '✗'
let g:syntastic_style_warning_symbol = '⚠'
let g:syntastic_auto_loc_list=0
let g:syntastic_aggregate_errors = 1
let g:syntastic_enable_signs=1
let g:syntastic_auto_jump=0
let g:syntastic_stl_format = '[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'
let g:syntastic_mode_map = { 'mode': 'active',
			\ 'active_filetypes': ['python', 'php', 'javascript'],
			\ 'passive_filetypes': ['puppet', 'html'] }
let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_post_args='--ignore=E501,E128,E225'

" -----------------------------------------------------------------------------
" Plugin: Tagbar
" -----------------------------------------------------------------------------
let g:tagbar_autofocus = 1
let g:tagbar_type_go = {
			\ 'ctagstype' : 'go',
			\ 'kinds'     : [  'p:package', 'i:imports:1', 'c:constants', 'v:variables',
			\ 't:types',  'n:interfaces', 'w:fields', 'e:embedded', 'm:methods',
			\ 'r:constructor', 'f:functions' ],
			\ 'sro' : '.',
			\ 'kind2scope' : { 't' : 'ctype', 'n' : 'ntype' },
			\ 'scope2kind' : { 'ctype' : 't', 'ntype' : 'n' },
			\ 'ctagsbin'  : 'gotags',
			\ 'ctagsargs' : '-sort -silent'
			\ }

" -----------------------------------------------------------------------------
" Plugin: vim-python
" -----------------------------------------------------------------------------
autocmd FileType python setlocal expandtab shiftwidth=4 tabstop=8 colorcolumn=99
			\ formatoptions+=croq softtabstop=4 smartindent
			\ cinwords=if,elif,else,for,while,try,except,finally,def,class,with

" -----------------------------------------------------------------------------
" Plugin: YouCompleteMe
" -----------------------------------------------------------------------------
set completeopt-=preview
let g:ycm_add_preview_to_completeopt = 0
let g:ycm_filepath_completion_use_working_dir = 1 

" -----------------------------------------------------------------------------
" Plugin: jedi-vim
" -----------------------------------------------------------------------------
let g:jedi#popup_on_dot = 0
let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#goto_definitions_command = "<leader>d"
let g:jedi#documentation_command = "K"
let g:jedi#usages_command = "<leader>n"
let g:jedi#rename_command = "<leader>r"
let g:jedi#show_call_signatures = "0"
let g:jedi#completions_command = "<C-Space>"

" -----------------------------------------------------------------------------
" Plugin: VimAirLine
" -----------------------------------------------------------------------------
" let g:airline_theme = 'powerlineish'
let g:airline_enable_branch = 0
let g:airline_enable_syntastic = 0
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#virtualenv#enabled = 1
let g:airline#extensions#tagbar#enabled = 1

" -----------------------------------------------------------------------------
" Plugin: javascript-libraries-syntax
" -----------------------------------------------------------------------------
let g:javascript_enable_domhtmlcss = 1
let g:used_javascript_libs = 'jquery,angularjs,requirejs'
autocmd BufReadPre *.js let b:javascript_lib_use_jquery = 1
autocmd BufReadPre *.js let b:javascript_lib_use_angularjs = 1
autocmd BufReadPre *.js let b:javascript_lib_use_requirejs = 1

" -----------------------------------------------------------------------------
" Plugin: pgsql.vim
" -----------------------------------------------------------------------------
let g:sql_type_default = 'pgsql'

